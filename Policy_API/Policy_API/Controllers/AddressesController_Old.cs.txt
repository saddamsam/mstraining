using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Policy_API.Models;
using Policy_API.Repository;

namespace Policy_API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class AddressesController : ControllerBase
    {
        private IAddressRepo _addressRepo;

        public AddressesController(IAddressRepo addressRepo)
        {
            _addressRepo = addressRepo;
        }


        [HttpGet]
        public async Task<IEnumerable<Address>> Get()
        {
           return await _addressRepo.GetAllAddress();
        }


        [HttpGet("{aadharCardNo}/{doorNo}/{streetName}")]
        public async Task<Address> Get(string aadharCardNo,string doorNo,string streetName)
        {
            return await _addressRepo.GetAddressByAddressId(aadharCardNo,doorNo,streetName);
        }


        [HttpPost("{aadharCardNo}")]
        public async Task<IActionResult> Post([FromBody] Address address,string aadharCardNo)
        {
            var result = await  _addressRepo.AddAddress(address,aadharCardNo);

            return CreatedAtAction(nameof(Get),new { id = address.AddressId },address);
        }

        [HttpPut("{aadharCardNo}/{oldDoorNo}/{oldStreetNo}")]
        public async Task<IActionResult> Put([FromBody] Address address, string aadharCardNo,string oldDoorNo,string oldStreetNo)
        {
            var result = await _addressRepo.UpdateAddress(address,aadharCardNo,oldDoorNo,oldStreetNo);

            return CreatedAtAction(nameof(Get), new { id = address.AddressId }, address);
        }


        [HttpDelete("{aadharCardNo}/{doorNo}/{streetNo}")]
        public async Task<IActionResult> Delete(string aadharCardNo,string doorNo,string streetNo)
        {
           var result =  await _addressRepo.DeleteAddress(aadharCardNo, doorNo, streetNo);

            if(result == true)
            {
                return new OkResult();
            }
            else
            {
                return new BadRequestResult();
            }
        }

    }
}
